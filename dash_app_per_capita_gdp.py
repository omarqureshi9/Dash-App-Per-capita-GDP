# -*- coding: utf-8 -*-
"""Dash App: Per Capita GDP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FbkboMGONwIKHesgakcSIVlWbL0iCyq3
"""

!pip install dash

import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import pandas as pd
import plotly.graph_objs as go


df = pd.read_csv('/content/Per Capita GDP of All Countries 1970 to 2022.csv')

app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("Per-Capita GDP from 1970 to 2022"),
    dcc.Dropdown(
        id='country-dropdown',
        options=[{'label': country, 'value': country} for country in df['Country'].unique()],
        value=['Afghanistan'],
        multi=True
    ),
    dcc.Graph(id='line-graph')
])


@app.callback(
    Output('line-graph', 'figure'),
    [Input('country-dropdown', 'value')]
)
def update_graph(selected_countries):
    if not selected_countries:
        return go.Figure()

    traces = []
    for country in selected_countries:
        filtered_df = df[df['Country'] == country]
        traces.append(go.Scatter(
            x=[str(year) for year in range(1970, 2023)],
            y=filtered_df.iloc[0, 2:].values,
            mode='lines',
            name=country,
            line={'width': 2.5}
        ))

    figure = {
        'data': traces,
        'layout': go.Layout(
            title='Country Data from 1970 to 2022',
            xaxis={
                'title': 'Year',
                'showgrid': False,
                'zeroline': False,
                'showline': True,
                'linewidth': 2,
                'linecolor': 'black',
                'mirror': True
            },
            yaxis={
                'title': 'Values',
                'showgrid': True,
                'gridcolor': 'lightgrey',
                'zeroline': False,
                'showline': True,
                'linewidth': 2,
                'linecolor': 'black',
                'mirror': True
            },
            plot_bgcolor='white',
            font={
                'family': 'Arial, sans-serif',
                'size': 12,
                'color': 'black'
            },
            legend={
                'orientation': 'h',
                'xanchor': 'center',
                'x': 0.5,
                'y': -0.2
            }
        )
    }

    return figure


if __name__ == '__main__':
    app.run_server(debug=True)

